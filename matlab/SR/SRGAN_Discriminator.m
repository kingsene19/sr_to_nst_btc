function dln = SRGAN_Discriminator()
        
    nKernelSize3 = 3;
    nKernelSize6 = 6;
    nFeatures = 64;
    leak=0.2;
    inputL = imageInputLayer( [224 224 3], 'Name', 'InputLayer', 'Normalization', 'none' );
    
    convA = convolution2dLayer(nKernelSize3, nFeatures, 'Stride', 1, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convA');
    actA = leakyReluLayer(leak, 'Name', 'lReluA');

    convB = convolution2dLayer(nKernelSize3, nFeatures, 'Stride', 2, 'Padding', 'same', ...
       'WeightsInitializer','he','BiasInitializer','zeros', ...
       'Name', 'convB');
    bnB = batchNormalizationLayer('Name', 'bnB');
    actB = leakyReluLayer(leak, 'Name', 'lReluB');
    
    convC = convolution2dLayer(nKernelSize3, nFeatures*2, 'Stride', 1, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convC');
    bnC = batchNormalizationLayer('Name', 'bnC');
    actC = leakyReluLayer(leak, 'Name', 'lReluC');

    convD = convolution2dLayer(nKernelSize3, nFeatures*2, 'Stride', 2, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convD');
    bnD = batchNormalizationLayer('Name', 'bnD');
    actD = leakyReluLayer(leak, 'Name', 'lReluD');

    convE = convolution2dLayer(nKernelSize3, nFeatures*4, 'Stride', 1, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convE');
    bnE = batchNormalizationLayer('Name', 'bnE');
    actE = leakyReluLayer(leak, 'Name', 'lReluE');

    
    convF = convolution2dLayer(nKernelSize3, nFeatures*4, 'Stride', 2, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convF');
    bnF = batchNormalizationLayer('Name', 'bnF');
    actF = leakyReluLayer(leak, 'Name', 'lReluF');

    convG = convolution2dLayer(nKernelSize3, nFeatures*8, 'Stride', 1, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convG');
    bnG = batchNormalizationLayer('Name', 'bnG');
    actG = leakyReluLayer(leak, 'Name', 'lReluG');

    convH = convolution2dLayer(nKernelSize3, nFeatures*8, 'Stride', 2, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convH');
    bnH = batchNormalizationLayer('Name', 'bnH');
    actH = leakyReluLayer(leak, 'Name', 'lReluH');

    convI = convolution2dLayer(nKernelSize3, nFeatures*16, 'Stride', 1, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convI');
    bnI = batchNormalizationLayer('Name', 'bnI');
    actI = leakyReluLayer(leak, 'Name', 'lReluI');

    convJ = convolution2dLayer(nKernelSize3, nFeatures*16, 'Stride', 2, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convJ');
    bnJ = batchNormalizationLayer('Name', 'bnJ');
    actJ = leakyReluLayer(leak, 'Name', 'lReluJ');

    convM = convolution2dLayer(nKernelSize6, 1, 'Stride', 7, 'Padding', 'same', ...
        'WeightsInitializer','he','BiasInitializer','zeros', ...
        'Name', 'convM');
    
    lg = layerGraph( [ ...
        inputL convA actA ...
        convB bnB actB ...
        convC bnC actC ...
        convD bnD actD ...
        convE bnE actE ...
        convF bnF actF ...
        convG bnG actG ...
        convH bnH actH ...
        convI bnI actI ...
        convJ bnJ actJ ...
        convM ] );
    dln = dlnetwork(lg);
end

